package com.cande.punkbar.dao;

import java.util.List;

import javax.persistence.EntityManager;

import org.hibernate.Session;
import org.hibernate.query.Query;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.cande.punkbar.entity.User;

@Repository
public class UserDaoImpl implements UserDAO{

	//define field for entityManager
	private EntityManager entityManager;
	
	//set up constructor injection
	@Autowired
	public UserDaoImpl(EntityManager theEntityManager) {
		entityManager = theEntityManager;
	}
	
	@Override
	@Transactional
	public List<User> findAll() {
		
		//get the current hibernate session
		Session currentSession = entityManager.unwrap(Session.class);
		
		//create a query
		Query<User> theQuery =
				currentSession.createQuery("from User", User.class);
		
		//execute query and get result list
		List<User> users = theQuery.getResultList();
		
		//return the results
		return users;
	}

	@Override
	public User findById(int theId) {
		
		// get the current hibernate session
		Session currentSession = entityManager.unwrap(Session.class);
		
		//get the user
		User theUser =
				currentSession.get(User.class, theId);
		
		//return the user
		return theUser;
	}

	@Override
	public void save(User theUser) {
		
	}

	@Override
	public void deleteById(int theId) {
		
	}
}
